#!/usr/bin/env python
import os
import sys
import ConfigParser
import logging
import ice
from ice.registry import client
import ice_shell
from ice_shell import config, ext


def _get_config_factory():
    cfg = ConfigParser.SafeConfigParser()
    for dir_path in ice.CONFIG_DIRS:
        file_path = os.path.join(dir_path, "ice.ini")
        if os.path.isfile(file_path):
            cfg.read(file_path)

    return config.ConfigFactory(cfg)


def _get_logger():
    for dir_path in ice.CONFIG_DIRS:
        file_path = os.path.join(dir_path, "logging.ini")
        if os.path.isfile(file_path):
            logging.config.fileConfig(file_path)
    return logging.getLogger('ice_shell')


if __name__ == '__main__':
    script_path = None
    if len(sys.argv) == 2:
        script_path = sys.argv[1]

    cfg_factory = _get_config_factory()

    reg_cfg = cfg_factory.get_registry_client()
    registry = client.RegistryClient(reg_cfg.host, reg_cfg.port)

    shell_cfg = cfg_factory.get_shell()

    logger = _get_logger()
    if shell_cfg.debug:
        logger.setLevel(logging.DEBUG)

    ice_shell.Shell(
        shell_cfg,
        registry,
        logger,
        extensions=[
            ext.registry.RegistryShell(
                registry,
                logger,
                debug=shell_cfg.debug
            ),
            ext.experiment.ExperimentShell(
                registry,
                shell_cfg.ssh_id_file_path,
                logger,
                debug=shell_cfg.debug
            ),
            ext.ec2.EC2Shell(
                cfg_factory,
                registry,
                logger,
                debug=shell_cfg.debug
            )
        ]
    ).run(script_path)
